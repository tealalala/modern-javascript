/**
 * length.js v1.1.0 (https://github.com/appalaszynski/length.js)
 * Copyright (c) 2018 appalaszynski (https://github.com/appalaszynski)
 * Licensed under MIT (https://github.com/appalaszynski/length.js/blob/master/LICENSE)
 */
!function(t,n){"object"==typeof exports&&"undefined"!=typeof module?module.exports=n():t.length=n()}(this,function(){"use strict";var u={pm:Math.pow(10,-12),nm:Math.pow(10,-9),um:Math.pow(10,-6),mm:Math.pow(10,-3),cm:Math.pow(10,-2),dm:Math.pow(10,-1),m:1,dam:Math.pow(10,1),hm:Math.pow(10,2),km:Math.pow(10,3),nmi:1852,in:.0254,ft:.3048,yd:.9144,fm:1.8288,mi:1609.344,ld:384402e3,au:149597870700,ly:9460730472580800,pc:648e3/Math.PI*149597870700},n=Object.keys(u),i={unitType:"Unsupported unit type! Supported types:\n"+n+".",valueType:"Value must be a number!",noUnit:"You have to pass unit type!",noValue:"You have to pass value!"};function e(t,n){r(t),o(n)}function o(t){if(void 0===t)throw Error(i.noUnit);if(-1==n.indexOf(t))throw Error(i.unitType)}function r(t){if(void 0===t)throw Error(i.noValue);if("number"!=typeof t)throw Error(i.valueType)}function a(t,n){e(t,n),this.value=t,this.unit=n}var h=function(t,n){return new a(t,n)};var t=a.prototype;return t.version="1.1.0",t.to=function(t){o(t);var n,i,e=(n=this.value,i=this.unit,n*u[i]*(1/u[t]));return h(e,t)},t.add=function(t,n){if(void 0===n||this.unit===n)return r(t),h(this.value+t,this.unit);if(e(t,n),0===t)return h(this.value,this.unit);var i=this.value+h(t,n).to(this.unit).getValue();return h(i,this.unit)},t.getValue=function(){return this.value},t.getUnit=function(){return this.unit},t.getString=t.toString=function(){return this.value+this.unit},t.toPrecision=function(t){var n=t?this.value.toFixed(t):this.value;return h(parseFloat(n),this.unit)},h.fn=t,h});